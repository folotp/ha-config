#==============================================================================
# HVAC control and supervision
#==============================================================================

#------------------------------------------------------------------------------
# Groups
#------------------------------------------------------------------------------
group:
  # Room Temperature Sensor Group
  home_room_temperature_sensors:
    name: Home Room Temperature Sensors Group
    entities:
      - sensor.bathroom_temperature
      - sensor.master_bedroom_temperature
      - sensor.office_temperature
      - sensor.zachary_bedroom_temperature
      - sensor.dining_room_temperature
      - sensor.living_room_temperature
      - sensor.washroom_temperature
      - sensor.home_theatre_temperature

#------------------------------------------------------------------------------
# Templates
#------------------------------------------------------------------------------
template:
  - sensor:
      # Lowest temperature in the home
      - name: "Home Room Temperature Lowest"
        unique_id: 7b0106c1-80eb-44fd-a687-1669444a7d3f
        icon: mdi:thermometer-chevron-down
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
        state: >
          {% set temps = expand('group.home_room_temperature_sensors')
             | map(attribute='state')
             | map('float')
             | list %}
          {{ temps | min if temps else none }}

      # Highest temperature in the home
      - name: "Home Room Temperature Highest"
        unique_id: 354fe009-1175-4dbb-aff3-501032948cc5
        icon: mdi:thermometer-chevron-up
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
        state: >
          {% set temps = expand('group.home_room_temperature_sensors')
             | map(attribute='state')
             | map('float')
             | list %}
          {{ temps | max if temps else none }}

      # Average temperature in the home
      - name: "Home Room Temperature Average"
        unique_id: 392255fb-628a-4e09-ab89-0269ca80c8dc
        icon: mdi:thermometer-lines
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
        state: >
          {% set temps = expand('group.home_room_temperature_sensors')
             | map(attribute='state')
             | map('float')
             | list %}
          {{ (temps | average) | round(2) if temps else none }}

      # Median temperature in the home
      - name: "Home Room Temperature Median"
        unique_id: b11a900d-da0d-42dd-a259-2e9a51999226
        icon: mdi:thermometer-lines
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
        state: >
          {% set temps = expand('group.home_room_temperature_sensors')
             | map(attribute='state')
             | map('float')
             | list
             | sort %}
          {% set n = temps | count %}
          {% if n == 0 %}
            none
          {% elif n is odd %}
            {{ temps[n // 2] }}
          {% else %}
            {{ ((temps[n // 2 - 1] + temps[n // 2]) / 2) | round(2) }}
          {% endif %}

      # Condensation resistence limit
      - name: "HVAC Window Condensation Resistance Limit"
        unique_id: 01JGVSY4535RR42RWHBRCJGJQK
        device_class: "humidity"
        state_class: "measurement"
        unit_of_measurement: "%"
        state: >
          {# Constants for Magnus formula #}
          {% set a = 17.62 %}
          {% set b = 243.12 %}

          {# K is the thermal efficiency factor of the window (0 = poor insulation, 1 = perfect insulation) #}
          {% set K = 0.08 %}

          {# Get indoor and outdoor temperatures (in °C) from sensors #}
          {% set indoor_temp = states('sensor.hvac_thermostat_ecobee_current_temperature') | float(20) %}
          {% set outdoor_temp = states('sensor.patio_sensor_temperature') | float(0) %}

          {# Estimate the inner surface temperature of the window using linear interpolation:
             T_surface = K * T_indoor + (1 - K) * T_outdoor
             A low K means the inside of the window is close to the cold outside temperature #}
          {% set surface_temp = (K * indoor_temp + (1 - K) * outdoor_temp) %}

          {% if indoor_temp > outdoor_temp %}
            {# Calculate gamma terms from the Magnus formula:
              gamma(T) = (a * T) / (b + T)
              These are used to estimate vapor pressures and dew point #}
            {% set gamma_surface = (a * surface_temp) / (b + surface_temp) %}
            {% set gamma_indoor = (a * indoor_temp) / (b + indoor_temp) %}

            {# Compute the maximum relative humidity (RH%) that prevents condensation:
              RH_max = 100 * e^(gamma_surface - gamma_indoor)
              This ensures the indoor dew point does not exceed the window surface temperature #}
            {{ (100 * (2.71828 ** (gamma_surface - gamma_indoor))) | round(1) }}
          {% else %}
            {# If it's warmer outside than inside, condensation risk is negligible #}
            100
          {% endif %}
        attributes:
          indoor_temperature: "{{ states('sensor.hvac_thermostat_ecobee_current_temperature') | float }}"
          outdoor_temperature: "{{ states('sensor.patio_sensor_temperature') | float }}"

  - binary_sensor:
      # Natural cooling usefull
      - name: "HVAC Natural Cooling Useful"
        unique_id: 01JHX05HERKAN0VJ04AB58MV42
        icon: mdi:sun-thermometer
        state: >
          {% set indoor_temp = states('sensor.hvac_thermostat_ecobee_current_temperature') | float %}
          {% set outdoor_temp = states('sensor.patio_sensor_temperature') | float %}
          {% set dew_point = states('sensor.weather_ec_dew_point') | float %}
          {% set hvac_mode = states('climate.hvac_thermostat_ecobee') | string %}
          {% set temp_delta = 4 %}
          {{ outdoor_temp <= (indoor_temp - temp_delta)
             and dew_point < 14
             and hvac_mode == 'cool'
          }}
        attributes:
          indoor_temperature: "{{ states('sensor.hvac_thermostat_ecobee_current_temperature') | float }}"
          outdoor_temperature: "{{ states('sensor.patio_sensor_temperature') | float }}"
          dew_point: "{{ states('sensor.weather_ec_dew_point') | float }}"
          hvac_mode: "{{ states('climate.hvac_thermostat_ecobee') | string }}"

      # Ecobee Thermostat is in disallowed HVAC mode
      - name: "HVAC Thermostat Ecobee In Disallowed HVAC Mode"
        unique_id: 4e3f21b8-4e20-4d98-a691-ce48c4c64001
        device_class: "problem"
        icon: mdi:alert
        state: >-
          {{ states('climate.hvac_thermostat_ecobee') in ['off', 'heat_cool'] }}

      # Flair Structure is in disallowed HVAC mode
      - name: "HVAC Flair Structure In Disallowed HVAC Mode"
        unique_id: 5459dbe3-4b18-42f1-aafc-dcf066d16e51
        device_class: "problem"
        icon: mdi:alert
        state: >-
          {{ states('climate.hvac_flair_structure') in ['off', 'heat_cool'] }}

      # Home room temperature threshold warning sensor
      - name: "Home Room Temperature Warning"
        unique_id: eb864082-179b-410b-99ea-4e2158148bcc
        device_class: problem
        icon: mdi:thermometer-alert
        state: >
          {{ states('sensor.home_room_temperature_highest') | float >= 26
             or states('sensor.home_room_temperature_lowest')  | float <= 16 }}

      # Home room temperature threshold critical sensor
      - name: "Home Room Temperature Critical"
        unique_id: 54439f5b-b313-4950-a997-6be468923616
        device_class: problem
        icon: mdi:thermometer-alert
        state: >
          {{ states('sensor.home_room_temperature_highest') | float >= 27
             or states('sensor.home_room_temperature_lowest')  | float <= 12 }}

#------------------------------------------------------------------------------
# Alerts
#------------------------------------------------------------------------------
alert:
  # HVAC Thermostat Ecobee Disallowed HVAC Mode Alert
  hvac_thermostat_ecobee_disallowed_hvac_mode:
    name: "Ecobee HVAC Mode is in a disallowed HVAC mode"
    title: "Chauffage, climatisation et ventilation"
    message: >-
      Le thermostat Ecobee est en mode
      {{ states('climate.hvac_thermostat_ecobee') }}.
      Le chauffage et la climatisation sont désactivés ou ne fonctionneront pas
      comme prévu. Seuls les modes chauffage et climatisation sont acceptés.
    done_message: >-
      Le thermostat est de retour en mode
      {{ states('climate.hvac_thermostat_ecobee') }}.
    entity_id: binary_sensor.hvac_thermostat_ecobee_disallowed_hvac_mode
    state: "on"
    repeat:
      - 15
      - 30
      - 60
    skip_first: false
    can_acknowledge: false
    data:
      push:
        interruption-level: critical
      group: "hvac"
      tag: "alert_hvac_thermostat_ecobee_hvac_mode"
    notifiers:
      - group_home_occupants_notifications
      - tts_kitchen_fr

  # HVAC Flair Structure Disallowed HVAC Mode Alert
  hvac_flair_structure_disallowed_hvac_mode:
    name: "Flair is in a disallowed HVAC mode"
    title: "Chauffage, climatisation et ventilation"
    message: >-
      Flair est en mode
      {{ states('cclimate.hvac_flair_structure') }}.
      Le chauffage et la climatisation sont désactivés ou ne fonctionneront pas
      comme prévu. Seuls les modes chauffage et climatisation sont acceptés.
    done_message: >-
      Flair est de retour en mode
      {{ states('climate.hvac_flair_structure') }}.
    entity_id: binary_sensor.hvac_flair_structure_in_disallowed_hvac_mode
    state: "on"
    repeat:
      - 15
      - 30
      - 60
    skip_first: false
    can_acknowledge: false
    data:
      push:
        interruption-level: critical
      group: "hvac"
      tag: "alert_hvac_flair_structure_hvac_mode"
    notifiers:
      - group_home_occupants_notifications
      - tts_kitchen_fr

  # HVAC Flair System Mode = Manual Alert
  hvac_flair_structure_system_mode_manual:
    name: "Flair System Mode is Manual"
    title: "Chauffage, climatisation et ventilation"
    message: >-
      Flair est en mode manuel. Le thermostat Ecobee contrôle seul la
      température et les grilles de plancher ne sont plus contrôlées
      automatiquement.
    done_message: >-
      Flair est de retour en mode
      {{ states('select.hvac_flair_structure_system_mode') }}.
    entity_id: select.hvac_flair_structure_system_mode
    state: "Manual"
    repeat:
      - 15
      - 30
      - 60
    skip_first: false
    can_acknowledge: false
    data:
      push:
        interruption-level: critical
      group: "hvac"
      tag: "alert_hvac_flair_structure_system_mode"
    notifiers:
      - group_home_occupants_notifications
      - tts_kitchen_fr

  #--------------------------
  # Home temperature warning Alert
  home_temperature_warning:
    name: "Home Temperature Warning"
    title: "Chauffage, climatisation et ventilation"
    message: >-
      La température de la maison n'est pas dans l'interval de température
      normal.
    done_message: >-
      La température de la maison est de retour à la normale.
    entity_id: binary_sensor.home_room_temperature_warning
    state: "on"
    repeat:
      - 30
      - 60
    skip_first: false
    can_acknowledge: false
    data:
      push:
        interruption-level: time-sensitive
      group: "hvac"
      tag: "alert_home_room_temperature_warning"
    notifiers:
      - group_home_occupants_notifications

  # Home temperature critical Alert
  home_temperature_critical:
    name: "Home Temperature Critical"
    title: "Chauffage, climatisation et ventilation"
    message: >-
      La température de la maison est critique!
    done_message: "clear_notification"
    entity_id: binary_sensor.home_room_temperature_critical
    state: "on"
    repeat:
      - 15
      - 30
      - 60
    skip_first: false
    can_acknowledge: false
    data:
      push:
        interruption-level: critical
      group: "hvac"
      tag: "alert_home_room_temperature_critical"
    notifiers:
      - group_home_occupants_notifications
      - tts_kitchen_fr

#------------------------------------------------------------------------------
# Customization
#------------------------------------------------------------------------------
homeassistant:
  customize:
    # Disable changing HVAC Mode from the ROOM thermostats
    climate.bathroom_thermostat:
      hvac_modes:
        - "N/A"
      supported_features: 1
    climate.dining_room_thermostat:
      hvac_modes:
        - "N/A"
      supported_features: 1
    climate.home_theatre_thermostat:
      hvac_modes:
        - "N/A"
      supported_features: 1
    climate.living_room_thermostat:
      hvac_modes:
        - "N/A"
      supported_features: 1
    climate.master_bedroom_thermostat:
      hvac_modes:
        - "N/A"
      supported_features: 1
    climate.office_thermostat:
      hvac_modes:
        - "N/A"
      supported_features: 1
    climate.washroom_thermostat:
      hvac_modes:
        - "N/A"
      supported_features: 1
    climate.zachary_bedroom_thermostat:
      hvac_modes:
        - "N/A"
      supported_features: 1
    # Disable HVAC modes other than heat and cool. Others should set using the
    # Flair app
    climate.hvac_flair_structure:
      hvac_modes:
        #- "off"
        - "heat"
        - "cool"
        #- "heat_cool" disabled
    # Disable HVAC modes other than heat or cool. Others shoul dbe set on the
    # Ecobee thermostat or its app.
    climate.hvac_thermostat_ecobee:
      hvac_modes:
        #- "off"
        - "heat"
        - "cool"
        #- "heat_cool" disabled
      supported_features: 137 # TARGET_TEMPERATURE (1), FAN_MODE (8), TURN_OFF (128)
